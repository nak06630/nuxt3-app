AWSTemplateFormatVersion: '2010-09-09'

# aws cloudformation deploy --template-file template-cognito.yml --stack-name nuxt3-app-cognito
# aws cloudformation delete

Description: The AWS CloudFormation template for cognito

Parameters:
  ParamUserPoolName:
    Type: String
    Default: nuxt3-app-cognito
    Description: UserPoolName
  ParamUserPoolClientName:
    Type: String
    Default: nuxt3-app-cognito-client
    Description: UserPoolClientName
  ParamUserPoolSecretClientName:
    Type: String
    Default: nuxt3-app-cognito-secret-client
    Description: UserPoolSecretClientName

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref ParamUserPoolName
      UsernameConfiguration:
        CaseSensitive: true
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: true
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: email
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
        - Name: name
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
        - Name: phone_number
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
      EnabledMfas:
        - SOFTWARE_TOKEN_MFA
      MfaConfiguration: OPTIONAL
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
        UnusedAccountValidityDays: 7
      DeviceConfiguration:
        ChallengeRequiredOnNewDevice: false
        DeviceOnlyRememberedOnUserPrompt: false

  AdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: admin
      UserPoolId: !Ref UserPool

  TestGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: test
      UserPoolId: !Ref UserPool

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Ref ParamUserPoolClientName
      GenerateSecret: false
      TokenValidityUnits:
        RefreshToken: days
        AccessToken: minutes
        IdToken: minutes
      RefreshTokenValidity: 30
      AccessTokenValidity: 720
      IdTokenValidity: 720
      UserPoolId: !Ref UserPool
      ReadAttributes:
        - email
        - name
        - phone_number
      WriteAttributes:
        - email
        - name
        - phone_number

  UserPoolSecretClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Ref ParamUserPoolSecretClientName
      GenerateSecret: true
      TokenValidityUnits:
        RefreshToken: days
        AccessToken: minutes
        IdToken: minutes
      RefreshTokenValidity: 30
      AccessTokenValidity: 720
      IdTokenValidity: 720
      UserPoolId: !Ref UserPool
      ReadAttributes:
        - email
        - name
        - phone_number
      WriteAttributes:
        - email
        - name
        - phone_number

Outputs:
  CognitoUserPoolArn:
    Value: !GetAtt UserPool.Arn
